#!/usr/bin/env ruby

libdir = File.expand_path('../../lib', __FILE__).sub(/^#{Dir.pwd}\//, '')
begin 
  require 'tic_tac_toe'
rescue LoadError
  case $!.to_s
  when /tic_tac_toe/
    if !$:.include?(libdir)
      warn "warn: #$!. trying again with #{libdir} on load path"
      $:.unshift(libdir)
      retry
    end
  end
  raise
end

def setup
  game = TicTacToe::Game.new
  terminal = TicTacToe::TerminalGame.new(game.board)

  if terminal.computer_goes_first?
    @player_1 = TicTacToe::ComputerPlayer.new(letter: 'o')
    @player_2 = TicTacToe::HumanPlayer.new(letter: 'x')
  else
    @player_1 = TicTacToe::HumanPlayer.new(letter: 'o')
    @player_2 = TicTacToe::HumanPlayer.new(letter: 'x')
  end

  game = TicTacToe::Game.new(nil, @player_1, @player_2)

  [game, terminal]
end

game, terminal = setup

loop do
  game.start
  terminal = TicTacToe::TerminalGame.new(game.board)

  if game.solved? || game.cats?
    terminal.update_board
    break unless terminal.play_again?
    game, terminal = setup
  end

  terminal.update_board

  move = terminal.get_move_from_user
  @player_1 = TicTacToe::HumanPlayer.new(letter: @player_1.letter, move: move)
  @player_2 = TicTacToe::ComputerPlayer.new(letter: @player_2.letter)

  grid = game.grid
  game = TicTacToe::Game.new(grid, @player_1, @player_2)

end

